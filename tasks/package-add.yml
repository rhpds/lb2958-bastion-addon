---
- name: Become block
  become: true
  block:
    - name: Set Ansible Python interpreter to k8s virtualenv
      ansible.builtin.set_fact:
        ansible_python_interpreter: /usr/libexec/platform-python
  
    - name: Install tcsh and Red Hat Lightspeed assistant
      ansible.builtin.command: >-
        dnf install -y tcsh
      register: install_tcsh
      failed_when: install_tcsh.rc != 0
      delegate_to: "{{ _hostname_ }}"

    - name: Enable copr repository
      ansible.builtin.command: >-
        dnf copr enable -y @rhel-lightspeed/command-line-assistant
      register: enable_copr
      failed_when: enable_copr.rc != 0
      delegate_to: "{{ _hostname_ }}"

    - name: Install command-line-assistant
      ansible.builtin.command: >-
        dnf install -y command-line-assistant
      register: install_cla
      failed_when: install_cla.rc != 0
      delegate_to: "{{ _hostname_ }}"
      
    - name: Install httpd
      ansible.builtin.command: >-
        dnf install -y httpd
      register: install_httpd
      failed_when: install_httpd.rc != 0
      delegate_to: "{{ _hostname_ }}"

    - name: Install firewalld
      ansible.builtin.command: >-
        dnf install -y firewalld
      register: install_firewalld
      failed_when: install_firewalld.rc != 0
      delegate_to: "{{ _hostname_ }}"

    - name: Enable and start firewalld service
      ansible.builtin.service:
        name: firewalld
        enabled: yes
        state: started
      register: start_firewalld
      delegate_to: "{{ _hostname_ }}"

    - name: Allow HTTP traffic through firewalld
      ansible.builtin.firewalld:
        service: http
        permanent: yes
        state: enabled
        immediate: yes
      register: allow_http
      delegate_to: "{{ _hostname_ }}"

    - name: Allow HTTPS traffic through firewalld
      ansible.builtin.firewalld:
        service: https
        permanent: yes
        state: enabled
        immediate: yes
      register: allow_https
      delegate_to: "{{ _hostname_ }}"

    - name: Reload firewalld to apply changes
      ansible.builtin.service:
        name: firewalld
        state: reloaded
      register: reload_firewalld
      delegate_to: "{{ _hostname_ }}"

    - name: Clone gist and move users.csv to home directory
      ansible.builtin.command: >-
        git clone https://gist.github.com/1c8afb3087be6e4ec8f1df0a5e50124d.git /tmp/users_gist &&
        mv /tmp/users_gist/users.csv ~/users.csv &&
        rm -rf /tmp/users_gist
      register: clone_gist
      failed_when: clone_gist.rc != 0
      delegate_to: "{{ _hostname_ }}"

    - name: Set Ansible Python interpreter to k8s virtualenv
      ansible.builtin.set_fact:
        ansible_python_interpreter: /opt/virtualenvs/k8s/bin/python
